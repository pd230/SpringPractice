1.
    The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files
    1 fix is - configure build path. 
    reason - project configured with jdk - 21 and eclipse configured with jdk - 17
    solution - configured eclipse with jdk - 21 
               Go to: Window → Preferences → Java → Installed JREs
               Click Add... → Standard VM
               Set path to:
               C:\Program Files\Java\jdk-21

2.  
    Exception in thread "main" org.springframework.beans.factory.NoSuchBeanDefinitionException: 
    reason - No qualifying bean of type 'com.example.SpringBasics.model.Alien' available
    solution - missing "@Component" Annotation top of Alien CLass

3. 
    error : Web server failed to start. Port 8080 was already in use.
    solution : stop the process that's listening on port 8080 or configure this application to listen on another port.
             src/main/resources/application.properties
              Add:
                  server.port=8070 (add any port number)

4.
   Even after changing the port, the application still says "port already in use", and the process keeps running 
   the background.
   reason : When you stop the app from your IDE, it doesn't always kill the background Java process So when you
            restart it, even on a different port, the JVM from the previous run might still be alive, holding the port.
   solution : 1.Always use the red stop button to kill the app.
              2.Check in your IDE: Run → Show Running List or Terminate All.
              3.kill running process : 
                     netstat -ano | findstr :8080
                     taskkill /PID 8916 /F
                     
 5.
   (for XML Configuration)
   Exception in thread "main" org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML
   document from class path resource [bean.xml]
   reason : bean.xml should be in a root folder
   
 6.
   Exception in thread "main" org.springframework.beans.factory.BeanCreationException: Error creating bean with name
   'Alien' defined in class path resource 
   [beans.xml]: Invalid property 'laptop' of bean class [springDemo.Alien]: Bean property 'laptop' is not writable or
    has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
    
    Caused by:Invalid property 'laptop' of bean class
    [springDemo.Alien]: Bean property 'laptop' is not writable or has an invalid setter method. 
    Does the parameter type of the setter match the return type of the getter?
     
    reason : while working with .xml configuration . if we are using property tag in xml for any property than
    there must have setters and getters for that property in respective class.
	
	
7.
   PreparedStatementCallback; bad SQL grammar [INSERT INTO StudModel(id, anme, age) VALUES(?,?,?)]
   
8.
   "One or more constraints have not been satisfied. Utility Module and Dynamic Web Module 6.0 cannot
    both be selected."
    
    Root Cause:
      Eclipse was treating my Spring Boot Maven project as a Dynamic Web Project
      Spring Boot uses embedded Tomcat and runs as a standalone JAR
      Hence, it does not require the Dynamic Web Module
      The presence of both Dynamic Web Module and Utility Module in Project Facets led to facet conflict
      Also, method in @Controller was not being called because of missing @ResponseBody and returning void

    How I Resolved It:
      
      Deleted Eclipse Project Metadata:
         .settings/
         .project
         .classpath
      Re-imported the project:
         As a Maven Project (File → Import → Maven → Existing Maven Project)
      Made sure packaging in pom.xml is set to:
         <packaging>jar</packaging>
      Ran the project using:
         Right-click → Run As → Java Application
